package MMMD.Test_Cases.ApplicationForm;

import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.PageFactory;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Factory;
import org.testng.annotations.Test;

import MMMD.Application_Forms;
import MMMD.Eligibilities_Validation;
import MMMD.GlobalVariables;
import MMMD.Service_Description;
import MMMD.ZamPass_;

public class Exploration_Licence extends GlobalVariables {

	public Service_Description MiningAndNonMiningRightsLicenceService;
	public Application_Forms serviceForms;
	public Eligibilities_Validation serviceEligibility; 
	
	
	@Factory(dataProvider = "getUser")
	public void setUp() throws InterruptedException {

		driver = new ChromeDriver();
		driver.get(urlEFPortal);
		driver.manage().window().maximize();

		// login in EFilling
		ZamPass_ loginEF = new ZamPass_(driver);
		loginEF.loginInEF(x,y,z);
		
		MiningAndNonMiningRightsLicenceService = PageFactory.initElements(driver, Service_Description.class);
		serviceForms = PageFactory.initElements(driver, Application_Forms.class);
		serviceEligibility = PageFactory.initElements(driver, Eligibilities_Validation.class); 

	}
	
	@BeforeMethod()
	public void preRequiests () throws InterruptedException {
		
		MiningAndNonMiningRightsLicenceService.chooseService(Service);

	}

	@Test
	public void large_applyFor_RadioactiveMinerals() throws InterruptedException {

		serviceForms.caseDetailsForm(Category[1], Customer[0], CustomerID[0]);
		serviceForms.applicationFormLargeRadioactive(Category[1]);

	}

	@Test
	public void large_applyForNon_RadioactiveMinerals() throws InterruptedException {

		serviceForms.caseDetailsForm(Category[1], Customer[0], CustomerID[0]);
		serviceForms.applicationFormLargeNonRadioactive(Category[1]);

	}

	@Test
	public void large_applyForNon_And_RadioactiveMinerals() throws InterruptedException {

		serviceForms.caseDetailsForm(Category[1], Customer[0], CustomerID[0]);
		serviceForms.applicationFormLargeNon_And_Radioactive(Category[1]);

	}

	@Test
	public void small_applyFor_RadioactiveMinerals() throws InterruptedException {

		serviceForms.caseDetailsForm(Category[1], Customer[0], CustomerID[0]);
		serviceForms.applicationFormSmallRadioactive(Category[1]);

	}

	@Test
	public void small_applyForNon_RadioactiveMinerals() throws InterruptedException {

		serviceForms.caseDetailsForm(Category[1], Customer[0], CustomerID[0]);
		serviceForms.applicationFormSmallNonRadioactive(Category[1]);

	}

	@Test
	public void small_applyForNon_And_RadioactiveMinerals() throws InterruptedException {

		serviceForms.caseDetailsForm(Category[1], Customer[0], CustomerID[0]);
		serviceForms.applicationFormSmallNon_And_Radioactive(Category[1]);

	}

}

/*
 * if (serviceCateogry == "Mining Licence" || serviceCateogry ==
 * "Exploration Licence" & scaleType=="Large Scale (399.7 - 24,925.05 ha)" &
 * mineralType=="Non-Radioactive") {
 * 
 * 
 * public static final String[] Category = new String[] { "Mining Licence",
 * "Exploration Licence", "Mineral Processing Licence"};
 * 
 * public static final String[] ScaleOfOperation = new String[] {
 * "Artisanal (not exceeding 9.98 ha)", "Large Scale (399.7 - 24,925.05 ha)",
 * "Small Scale (9.99 - 399.6 ha)"};
 * 
 * public static final String[] MineralsType = new String[] { "Non-Radioactive",
 * "Radioactive", "Radioactive and Non-Radioactive"};
 */