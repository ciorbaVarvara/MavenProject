package MMMD.Test_Cases.Payment;

import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import MMMD.Application_Forms;
import MMMD.Eligibilities_Validation;
import MMMD.GlobalVariables;
import MMMD.Service_Description;
import MMMD.ZamPass_;
import MMMD.ZamPay_;

public class Exploration_Licence_Large extends GlobalVariables {

	public Service_Description MiningAndNonMiningRightsLicenceService;
	public Application_Forms serviceForms;
	public Eligibilities_Validation serviceEligibility; 
	
	@BeforeTest(groups = { "largeScale", "NonAndRadioactive", "radioactive", "NonRadioactive", "indivdualApplicant" })
	public void login() throws InterruptedException {

		driver = new ChromeDriver();
		driver.get(urlEFPortal);
		driver.manage().window().maximize();

		// login in EFilling
		ZamPass_ loginEF = new ZamPass_(driver);
		loginEF.loginInEF(Username, Password, User);

	}

	@Test(groups = { "largeScale", "radioactive", "indivdualApplicant" })
	public void Pay_For_Exloration_Licence_Large_RadioActive() throws InterruptedException {
		Service_Description MiningAndNonMiningRightsLicenceService = new Service_Description(driver);
		MiningAndNonMiningRightsLicenceService.chooseService(Service);

		Application_Forms serviceForms = new Application_Forms(driver);
		serviceForms.caseDetailsForm(Category[1], Customer[0], CustomerID[0]);

		serviceForms.applicationFormLargeRadioactive(Category[1]);

		serviceForms.goToNextGS_1();

		ZamPay_ payment = new ZamPay_(driver);
		payment.paymentWithMTN(phoneNumbers[0]);

	}

	@Test(groups = { "largeScale", "NonRadioactive", "indivdualApplicant" })
	public void Pay_For_Exloration_Licence_Large_NonRadioactive() throws InterruptedException {

		Service_Description MiningAndNonMiningRightsLicenceService2 = new Service_Description(driver);
		MiningAndNonMiningRightsLicenceService2.chooseService(Service);

		Application_Forms serviceForms = new Application_Forms(driver);
		serviceForms.caseDetailsForm(Category[1], Customer[0], CustomerID[0]);

		serviceForms.applicationFormLargeNonRadioactive(Category[1]);

		serviceForms.goToNextGS_1();

		ZamPay_ payment = new ZamPay_(driver);
		payment.paymentWithMTN(phoneNumbers[0]);

	}

	@Test(groups = { "largeScale", "NonAndRadioactive", "indivdualApplicant" })
	public void Pay_For_Exloration_Licence_Large_RadioAndNonRadioactive() throws InterruptedException {

		Service_Description MiningAndNonMiningRightsLicenceService2 = new Service_Description(driver);
		MiningAndNonMiningRightsLicenceService2.chooseService(Service);

		Application_Forms serviceForms = new Application_Forms(driver);
		serviceForms.caseDetailsForm(Category[1], Customer[0], CustomerID[0]);

		serviceForms.applicationFormLargeNon_And_Radioactive(Category[1]);

		serviceForms.goToNextGS_1();

		ZamPay_ payment = new ZamPay_(driver);
		payment.paymentWithMTN(phoneNumbers[0]);

	}

}
