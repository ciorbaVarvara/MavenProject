package MMMD.Test_Cases.Payment;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import MMMD.ApplicationForm;
import MMMD.GlobalVariables;
import MMMD.ServiceDescription;
import MMMD.ZamPass;
import MMMD.ZamPay;

public class Exploration_Licence_Small extends GlobalVariables {
	
	@BeforeTest(groups = { "smallScale", "NonAndRadioactive", "radioactive", "NonRadioactive", "indivdualApplicant" })
	public void login() throws InterruptedException {

		driver = new ChromeDriver();
		driver.get(urlEFPortal);
		driver.manage().window().maximize();

		// login in EFilling
		ZamPass loginEF = new ZamPass(driver);
		loginEF.loginInEF(Username, Password, User);

	}
	@Test
	public static void Pay_For_Exloration_Licence_Small_Radioactive() throws InterruptedException {

		// login in EFilling
		ZamPass loginEF = new ZamPass(driver);
		loginEF.loginInEF(Username, Password, User);

		ServiceDescription MiningAndNonMiningRightsLicenceService = new ServiceDescription(driver);
		MiningAndNonMiningRightsLicenceService.chooseService(Service);

		// Individual:
		ApplicationForm serviceForms = new ApplicationForm(driver);
		serviceForms.caseDetailsForm(Category[1], Customer[0], CustomerID[0]);

		serviceForms.applicationFormSmallRadioactive(Category[1]);

		serviceForms.goToNextGS_1();

		ZamPay payment = new ZamPay(driver);
		payment.paymentWithMTN(phoneNumbers[0]);

	}

	@Test
	public static void Pay_For_Exloration_Licence_Small_NonRadioactive() throws InterruptedException {

		WebDriver driver = new ChromeDriver();
		driver.get("https://mmmdui.dotgov.cloud/services");
		driver.manage().window().maximize();

		// login in EFilling
		ZamPass loginEF = new ZamPass(driver);
		loginEF.loginInEF(Username, Password, User);

		ServiceDescription MiningAndNonMiningRightsLicenceService = new ServiceDescription(driver);
		MiningAndNonMiningRightsLicenceService.chooseService(Service);
		// sd.serviceDescriptionValidation(ServiceText, FeeText, ProcessingTimeText,
		// ValidityText);

		// Individual:
		ApplicationForm serviceForms = new ApplicationForm(driver);
		serviceForms.caseDetailsForm(Category[1], Customer[0], CustomerID[0]);

		serviceForms.applicationFormSmallNonRadioactive(Category[1]);

		serviceForms.goToNextGS_1();

		ZamPay payment = new ZamPay(driver);
		payment.paymentWithMTN(phoneNumbers[0]);

	}

	@Test
	public static void Pay_For_Exloration_Licence_Small_NonAndRadioactive() throws InterruptedException {

		WebDriver driver = new ChromeDriver();
		driver.get("https://mmmdui.dotgov.cloud/services");
		driver.manage().window().maximize();

		// login in EFilling
		ZamPass loginEF = new ZamPass(driver);
		loginEF.loginInEF(Username, Password, User);

		ServiceDescription MiningAndNonMiningRightsLicenceService = new ServiceDescription(driver);
		MiningAndNonMiningRightsLicenceService.chooseService(Service);
		// sd.serviceDescriptionValidation(ServiceText, FeeText, ProcessingTimeText,
		// ValidityText);

		// Individual:
		ApplicationForm serviceForms = new ApplicationForm(driver);
		serviceForms.caseDetailsForm(Category[1], Customer[0], CustomerID[0]);

		serviceForms.applicationFormSmallNon_And_Radioactive(Category[1]);

		serviceForms.goToNextGS_1();

		ZamPay payment = new ZamPay(driver);
		payment.paymentWithMTN(phoneNumbers[0]);

	}

}