package MMMD.Test_Cases.Eligibility;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import MMMD.ApplicationForm;
import MMMD.EligibilityValidation;
import MMMD.GlobalVariables;
import MMMD.ServiceDescription;
import MMMD.ZamPass;

public class Mining_Licence extends GlobalVariables {

	@BeforeTest(groups = { "largeScale", "artisanalScale", "smallScale", "NonAndRadioactive", "Radioactive",
			"NonRadioactive", "indivdualApplicant" })
	public void login() throws InterruptedException {

		driver = new ChromeDriver();
		driver.get(urlEFPortal);
		driver.manage().window().maximize();

		// login in EFilling
		ZamPass loginEF = new ZamPass(driver);
		loginEF.loginInEF(Username, Password, User);

	}

	@Test(groups={"artisanalScale", "individualApplicant", "Radioactive"})
	public static void miningLicenceArtisanal_Radioactive() throws InterruptedException {

		ServiceDescription MiningAndNonMiningRightsLicenceService = new ServiceDescription(driver);
		MiningAndNonMiningRightsLicenceService.chooseService(Service);

		// Individual:
		ApplicationForm serviceForms = new ApplicationForm(driver);
		serviceForms.caseDetailsForm(Category[0], Customer[0], CustomerID[0]);

		serviceForms.applicationFormArtisanalNonRadioactive(Category[0]);

		EligibilityValidation serviceEligibility = new EligibilityValidation(driver);
		serviceEligibility.eligibilityVerification(Category[0], Customer[0], ScaleOfOperation[0], MineralsType[1]); 

	}
	
	@Test(groups={"artisanalScale", "individualApplicant", "NonRadioactive"})
	public static void miningLicenceArtisanal_NonRadioactive() throws InterruptedException {

		ServiceDescription MiningAndNonMiningRightsLicenceService = new ServiceDescription(driver);
		MiningAndNonMiningRightsLicenceService.chooseService(Service);

		// Individual:
		ApplicationForm serviceForms = new ApplicationForm(driver);
		serviceForms.caseDetailsForm(Category[0], Customer[0], CustomerID[0]);

		serviceForms.applicationFormArtisanalNonRadioactive(Category[0]);

		EligibilityValidation serviceEligibility = new EligibilityValidation(driver);
		serviceEligibility.eligibilityVerification(Category[0], Customer[0], ScaleOfOperation[0], MineralsType[0]); 

	}
	@Test(groups={"artisanalScale", "individualApplicant", "NonAndRadioactive"})
	public static void miningLicenceArtisanal_NonAndRadioactive() throws InterruptedException {

		ServiceDescription MiningAndNonMiningRightsLicenceService = new ServiceDescription(driver);
		MiningAndNonMiningRightsLicenceService.chooseService(Service);

		// Individual:
		ApplicationForm serviceForms = new ApplicationForm(driver);
		serviceForms.caseDetailsForm(Category[0], Customer[0], CustomerID[0]);

		serviceForms.applicationFormArtisanalNonRadioactive(Category[0]);

		EligibilityValidation serviceEligibility = new EligibilityValidation(driver);
		serviceEligibility.eligibilityVerification(Category[0], Customer[0], ScaleOfOperation[0], MineralsType[2]); 

	}

}
